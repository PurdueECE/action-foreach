In my examples, I have "always true statements" (like "OR 1=1") and "batched SQL statements" injections. And in the original implementation, SQL statements are concatenated using quotation marks. Therefore, it could prevent from "always true" attack. However, if there is an embedded SQL statement inside the input, then it cannot handle. The new method to prevent SQL injection is to use parameters. I have a dictionary to define the user input and then matched the placeholder in the SQL statement to the user input one by one. Now, both the "always true statements" injection and "batched SQL statements" attack will treat all input as a string as a whole, and therefore it will report "the username or password is not found" correctly.